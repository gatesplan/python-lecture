<?xml version="1.0" encoding="UTF-8"?>
<problems>
  <!-- 문제 1: count() 기본 사용 -->
  <problem>
    <description>숫자 tuple (1, 2, 3, 2, 4, 2, 5)에서 숫자 2가 몇 개 있는지 세어보세요.</description>
    <code><![CDATA[numbers = (1, 2, 3, 2, 4, 2, 5)
# 여기에 코드 작성]]></code>
    <input></input>
    <output><![CDATA[2의 개수: 3개]]></output>
    <hint>tuple.count() 메서드를 사용하세요.</hint>
    <solution><![CDATA[numbers = (1, 2, 3, 2, 4, 2, 5)
count_2 = numbers.count(2)
print(f"2의 개수: {count_2}개")]]></solution>
  </problem>

  <!-- 문제 2: count() 문자열 -->
  <problem>
    <description>과일 tuple ('사과', '바나나', '사과', '오렌지', '사과')에서 '사과'의 개수를 세어보세요.</description>
    <code><![CDATA[fruits = ('사과', '바나나', '사과', '오렌지', '사과')
# 여기에 코드 작성]]></code>
    <input></input>
    <output><![CDATA[사과의 개수: 3개]]></output>
    <hint>문자열도 count() 메서드로 셀 수 있습니다.</hint>
    <solution><![CDATA[fruits = ('사과', '바나나', '사과', '오렌지', '사과')
apple_count = fruits.count('사과')
print(f"사과의 개수: {apple_count}개")]]></solution>
  </problem>

  <!-- 문제 3: count() 없는 요소 -->
  <problem>
    <description>색상 tuple ('빨강', '파랑', '노랑', '빨강')에서 '초록'의 개수를 세어보세요.</description>
    <code><![CDATA[colors = ('빨강', '파랑', '노랑', '빨강')
# 여기에 코드 작성]]></code>
    <input></input>
    <output><![CDATA[초록의 개수: 0개]]></output>
    <hint>없는 요소를 count()하면 0이 반환됩니다.</hint>
    <solution><![CDATA[colors = ('빨강', '파랑', '노랑', '빨강')
green_count = colors.count('초록')
print(f"초록의 개수: {green_count}개")]]></solution>
  </problem>

  <!-- 문제 4: index() 기본 사용 -->
  <problem>
    <description>동물 tuple ('고양이', '강아지', '토끼', '햄스터')에서 '토끼'의 위치(인덱스)를 찾아보세요.</description>
    <code><![CDATA[animals = ('고양이', '강아지', '토끼', '햄스터')
# 여기에 코드 작성]]></code>
    <input></input>
    <output><![CDATA[토끼의 위치: 2]]></output>
    <hint>tuple.index() 메서드를 사용하면 첫 번째로 나타나는 위치를 찾습니다.</hint>
    <solution><![CDATA[animals = ('고양이', '강아지', '토끼', '햄스터')
rabbit_index = animals.index('토끼')
print(f"토끼의 위치: {rabbit_index}")]]></solution>
  </problem>

  <!-- 문제 5: index() 첫 번째 위치 -->
  <problem>
    <description>숫자 tuple (5, 3, 7, 3, 9, 3)에서 숫자 3이 처음 나타나는 위치를 찾아보세요.</description>
    <code><![CDATA[numbers = (5, 3, 7, 3, 9, 3)
# 여기에 코드 작성]]></code>
    <input></input>
    <output><![CDATA[3의 첫 번째 위치: 1]]></output>
    <hint>index() 메서드는 항상 첫 번째로 찾은 위치를 반환합니다.</hint>
    <solution><![CDATA[numbers = (5, 3, 7, 3, 9, 3)
first_3_index = numbers.index(3)
print(f"3의 첫 번째 위치: {first_3_index}")]]></solution>
  </problem>

  <!-- 문제 6: count()와 index() 조합 -->
  <problem>
    <description>학점 tuple ('A', 'B', 'A', 'C', 'A', 'B')에서 'A' 학점의 개수와 첫 번째 위치를 모두 출력하세요.</description>
    <code><![CDATA[grades = ('A', 'B', 'A', 'C', 'A', 'B')
# 여기에 코드 작성]]></code>
    <input></input>
    <output><![CDATA[A 학점 개수: 3개
A 학점 첫 위치: 0]]></output>
    <hint>count()와 index() 메서드를 둘 다 사용하세요.</hint>
    <solution><![CDATA[grades = ('A', 'B', 'A', 'C', 'A', 'B')
a_count = grades.count('A')
a_index = grades.index('A')
print(f"A 학점 개수: {a_count}개")
print(f"A 학점 첫 위치: {a_index}")]]></solution>
  </problem>

  <!-- 문제 7: 여러 요소 찾기 -->
  <problem>
    <description>요일 tuple ('월', '화', '수', '목', '금', '토', '일')에서 '수요일'과 '금요일'의 위치를 각각 찾아보세요.</description>
    <code><![CDATA[weekdays = ('월', '화', '수', '목', '금', '토', '일')
# 여기에 코드 작성]]></code>
    <input></input>
    <output><![CDATA[수요일 위치: 2
금요일 위치: 4]]></output>
    <hint>index() 메서드를 두 번 사용하세요.</hint>
    <solution><![CDATA[weekdays = ('월', '화', '수', '목', '금', '토', '일')
wed_index = weekdays.index('수')
fri_index = weekdays.index('금')
print(f"수요일 위치: {wed_index}")
print(f"금요일 위치: {fri_index}")]]></solution>
  </problem>

  <!-- 문제 8: 범위 지정 index() -->
  <problem>
    <description>숫자 tuple (1, 5, 3, 5, 7, 5, 9)에서 인덱스 2부터 찾기 시작해서 숫자 5의 위치를 찾아보세요.</description>
    <code><![CDATA[numbers = (1, 5, 3, 5, 7, 5, 9)
# 여기에 코드 작성]]></code>
    <input></input>
    <output><![CDATA[인덱스 2부터 찾은 5의 위치: 3]]></output>
    <hint>index(값, 시작위치) 형태로 사용할 수 있습니다.</hint>
    <solution><![CDATA[numbers = (1, 5, 3, 5, 7, 5, 9)
index_from_2 = numbers.index(5, 2)
print(f"인덱스 2부터 찾은 5의 위치: {index_from_2}")]]></solution>
  </problem>

  <!-- 문제 9: 실용적인 예제 - 메뉴 선택 -->
  <problem>
    <description>메뉴 tuple ('김치찌개', '된장찌개', '부대찌개', '순두부찌개')에서 '부대찌개'가 몇 번째 메뉴인지 찾아보세요. (1번부터 시작)</description>
    <code><![CDATA[menu = ('김치찌개', '된장찌개', '부대찌개', '순두부찌개')
# 여기에 코드 작성]]></code>
    <input></input>
    <output><![CDATA[부대찌개는 3번 메뉴입니다]]></output>
    <hint>index() 결과에 1을 더하면 1번부터 시작하는 번호가 됩니다.</hint>
    <solution><![CDATA[menu = ('김치찌개', '된장찌개', '부대찌개', '순두부찌개')
budae_index = menu.index('부대찌개')
menu_number = budae_index + 1
print(f"부대찌개는 {menu_number}번 메뉴입니다")]]></solution>
  </problem>

  <!-- 문제 10: 종합 문제 -->
  <problem>
    <description>시험 점수 tuple (85, 90, 85, 92, 88, 85, 95)에서 85점의 개수와 마지막 85점의 위치를 찾아보세요.</description>
    <code><![CDATA[scores = (85, 90, 85, 92, 88, 85, 95)
# 여기에 코드 작성]]></code>
    <input></input>
    <output><![CDATA[85점 개수: 3개
마지막 85점 위치: 5]]></output>
    <hint>count()로 개수를 세고, 뒤에서부터 찾으려면 tuple을 뒤집어서 계산해야 합니다.</hint>
    <solution><![CDATA[scores = (85, 90, 85, 92, 88, 85, 95)
count_85 = scores.count(85)

# 마지막 85점 위치 찾기: 뒤에서부터 찾은 후 실제 인덱스 계산
reversed_scores = tuple(reversed(scores))
last_85_from_end = reversed_scores.index(85)
last_85_index = len(scores) - 1 - last_85_from_end

print(f"85점 개수: {count_85}개")
print(f"마지막 85점 위치: {last_85_index}")]]></solution>
  </problem>
</problems>
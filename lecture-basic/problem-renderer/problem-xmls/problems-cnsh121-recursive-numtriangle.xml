<?xml version="1.0" encoding="UTF-8"?>
<problems>
  <!-- 문제 1: 재귀함수 파라메터 완성 -->
  <problem>
    <description>다음 재귀함수가 올바르게 동작하도록 재귀 호출 파라메터를 완성하세요.</description>
    <code><![CDATA[def numtriangle(n):
    if n < 1:
        return
    numtriangle(____)  # 여기를 채우세요

    for i in range(1, n+1):
        print(i, end=' ')

    print()]]></code>
    <input><![CDATA[numtriangle(4)]]></input>
    <output><![CDATA[1
1 2
1 2 3
1 2 3 4
]]></output>
    <hint></hint>
    <solution><![CDATA[def numtriangle(n):
    if n < 1:
        return
    numtriangle(n-1)  # 정답: n-1

    for i in range(1, n+1):
        print(i, end=' ')

    print()]]></solution>
  </problem>

  <!-- 문제 2: range() 파라메터 완성 -->
  <problem>
    <description>다음 재귀함수에서 예상 출력대로 올바르게 동작하도록 range() 파라메터를 완성하세요.</description>
    <code><![CDATA[def numtriangle(n):
    if n < 1:
        return
    numtriangle(n-1)

    for i in range(____):  # 여기를 채우세요
        print(i, end=' ')

    print()]]></code>
    <input><![CDATA[numtriangle(3)]]></input>
    <output><![CDATA[1
1 2
1 2 3
]]></output>
    <hint></hint>
    <solution><![CDATA[def numtriangle(n):
    if n < 1:
        return
    numtriangle(n-1)

    for i in range(1, n+1):  # 정답: 1, n+1
        print(i, end=' ')

    print()]]></solution>
  </problem>

  <!-- 문제 3: print() 제거 시 결과 설명 -->
  <problem>
    <description>다음 재귀함수에서 마지막 print()가 없으면 출력값이 어떻게 변하는지 설명하세요.</description>
    <code><![CDATA[def numtriangle(n):
    if n < 1:
        return
    numtriangle(n-1)

    for i in range(1, n+1):
        print(i, end=' ')

    print()  # 이 print()가 없으면?]]></code>
    <input><![CDATA[numtriangle(3)]]></input>
    <output></output>
    <hint></hint>
    <solution><![CDATA[# print()가 없으면:
# 출력: 1 1 2 1 2 3 (모두 한 줄에 연결되어 출력)

# print()가 있으면:
# 출력:
# 1
# 1 2
# 1 2 3

# 이유: print()는 줄바꿈을 수행하는 역할을 함
# print()가 없으면 각 레벨의 숫자들이 모두 한 줄에 연결되어 출력됨
# print()가 있으면 각 레벨마다 새로운 줄로 구분되어 삼각형 모양으로 출력됨]]></solution>
  </problem>

  <!-- 문제 4: 이중 for문으로 재구현 -->
  <problem>
    <description>다음 재귀함수와 같은 기능을 하는 이중 for문 기반 함수를 구현하세요.</description>
    <code><![CDATA[def numtriangle(n):
    if n < 1:
        return
    numtriangle(n-1)

    for i in range(1, n+1):
        print(i, end=' ')

    print()

# 이중 for문 버전을 작성하세요
def numtriangle_for(n):
    pass]]></code>
    <input><![CDATA[numtriangle_for(4)]]></input>
    <output><![CDATA[1
1 2
1 2 3
1 2 3 4
]]></output>
    <hint></hint>
    <solution><![CDATA[def numtriangle_for(n):
    for row in range(1, n+1):
        for col in range(1, row+1):
            print(col, end=' ')
        print()]]></solution>
  </problem>
</problems>
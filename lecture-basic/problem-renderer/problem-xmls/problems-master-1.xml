<?xml version="1.0" encoding="UTF-8"?>
<!--
  Master Level 1 - 고급 테크닉 및 복합 개념 문제집 (배운 내용만 사용)
  - 메서드 체이닝, 중첩 연산, 실용적 응용
  - print, f-string, format, 문자열 메서드, 슬라이싱, 리스트 기초만 사용
  - 반복문, 조건문, 고급 함수 사용 금지
-->
<problems>
  <problem>
    <description>문자열 "  apple,banana,orange  "의 공백을 제거하고 콤마로 분할한 후, 첫 번째 과일만 대문자로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[APPLE]]></output>
    <hint>strip() → split(',') → 첫 번째 요소[0]에 upper() 적용</hint>
    <solution><![CDATA[text = "  apple,banana,orange  "
fruits = text.strip().split(',')
print(fruits[0].upper())]]></solution>
  </problem>

  <problem>
    <description>이름 "홍길동"을 list()로 문자 리스트로 만든 후, 성과 이름을 분리하여 f-string으로 "성: ?, 이름: ??" 형태로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[성: 홍, 이름: 길동]]></output>
    <hint>list()로 변환 후 [0]은 성, [1:]은 이름으로 처리하고 join() 사용</hint>
    <solution><![CDATA[name = "홍길동"
chars = list(name)
surname = chars[0]
given_name = "".join(chars[1:])
print(f"성: {surname}, 이름: {given_name}")]]></solution>
  </problem>

  <problem>
    <description>문자열 "HELLO world"를 소문자로 변환하고 split()으로 분할한 후, 두 단어를 하이픈으로 연결하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[hello-world]]></output>
    <hint>lower().split() 후 join('-')으로 연결</hint>
    <solution><![CDATA[text = "HELLO world"
words = text.lower().split()
print("-".join(words))]]></solution>
  </problem>

  <problem>
    <description>문자열 "programming"에서 첫 글자, 중간 글자(5번 인덱스), 마지막 글자를 추출하여 대문자로 변환하고 점으로 연결하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[P.R.G]]></output>
    <hint>[0], [5], [-1] 인덱스를 사용하고 각각 upper() 적용</hint>
    <solution><![CDATA[word = "programming"
first = word[0].upper()
middle = word[5].upper()
last = word[-1].upper()
print(f"{first}.{middle}.{last}")]]></solution>
  </problem>

  <problem>
    <description>사용자 정보 "김철수:25:서울:학생"를 콜론으로 분할하고, format() 메서드를 사용하여 "이름: {}, 직업: {}" 형태로 첫 번째와 마지막 정보만 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[이름: 김철수, 직업: 학생]]></output>
    <hint>split(':')로 분할한 후 [0]과 [-1] 인덱스 사용</hint>
    <solution><![CDATA[info = "김철수:25:서울:학생"
parts = info.split(':')
print("이름: {}, 직업: {}".format(parts[0], parts[-1]))]]></solution>
  </problem>

  <problem>
    <description>문자열 "   Hello   World   "에서 모든 공백을 제거하고 대문자로 변환한 후, 첫 5글자만 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[HELLO]]></output>
    <hint>replace(' ', '')로 공백 제거 → upper() → [:5] 슬라이싱</hint>
    <solution><![CDATA[text = "   Hello   World   "
clean_text = text.replace(' ', '').upper()
print(clean_text[:5])]]></solution>
  </problem>

  <problem>
    <description>전화번호 "010-1234-5678"에서 하이픈을 제거하고, 처음 3자리와 마지막 4자리만 별표 3개로 연결하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[010***5678]]></output>
    <hint>replace('-', '')로 하이픈 제거 → [:3] + "***" + [-4:] 조합</hint>
    <solution><![CDATA[phone = "010-1234-5678"
digits = phone.replace('-', '')
masked = digits[:3] + "***" + digits[-4:]
print(masked)]]></solution>
  </problem>

  <problem>
    <description>문자열 "python-java-html"을 하이픈으로 분할하고, 각 언어명의 첫 글자를 조합하여 대문자로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[PJH]]></output>
    <hint>split('-') 후 각 요소의 [0] 인덱스 조합하고 upper() 적용</hint>
    <solution><![CDATA[languages = "python-java-html"
lang_list = languages.split('-')
initials = lang_list[0][0] + lang_list[1][0] + lang_list[2][0]
print(initials.upper())]]></solution>
  </problem>

  <problem>
    <description>이메일 주소 "user@domain.com"에서 사용자명과 도메인을 분리하고, f-string으로 "사용자: {사용자명}, 도메인: {도메인}" 형태로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[사용자: user, 도메인: domain.com]]></output>
    <hint>split('@')로 분할하여 [0]은 사용자명, [1]은 도메인</hint>
    <solution><![CDATA[email = "user@domain.com"
parts = email.split('@')
username = parts[0]
domain = parts[1]
print(f"사용자: {username}, 도메인: {domain}")]]></solution>
  </problem>

  <problem>
    <description>문장 "I love Python"의 각 단어를 역순으로 뒤집고, 대문자로 변환하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[I EVOL NOHTYP]]></output>
    <hint>split() 후 각 단어에 [::-1]과 upper() 적용하여 join()</hint>
    <solution><![CDATA[sentence = "I love Python"
words = sentence.split()
reversed_words = [words[0][::-1].upper(), words[1][::-1].upper(), words[2][::-1].upper()]
print(" ".join(reversed_words))]]></solution>
  </problem>

  <problem>
    <description>문자열 "hello123world456"에서 숫자 부분만 추출하여 하이픈으로 연결하고 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[1-2-3-4-5-6]]></output>
    <hint>각 문자를 개별적으로 확인하여 숫자만 추출 (인덱싱 활용)</hint>
    <solution><![CDATA[text = "hello123world456"
digits = text[5] + "-" + text[6] + "-" + text[7] + "-" + text[13] + "-" + text[14] + "-" + text[15]
print(digits)]]></solution>
  </problem>

  <problem>
    <description>문자열 "Programming"을 3글자씩 나누어 각각 소문자로 변환하고 점으로 연결하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[pro.gra.mmi.ng]]></output>
    <hint>슬라이싱으로 [0:3], [3:6], [6:9], [9:] 분할하고 각각 lower() 적용</hint>
    <solution><![CDATA[word = "Programming"
part1 = word[0:3].lower()
part2 = word[3:6].lower()
part3 = word[6:9].lower()
part4 = word[9:].lower()
print(f"{part1}.{part2}.{part3}.{part4}")]]></solution>
  </problem>

  <problem>
    <description>이름 리스트 ["김철수", "이영희", "박민수"]에서 모든 성씨를 추출하여 쉼표로 연결하고 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[김,이,박]]></output>
    <hint>각 이름의 첫 글자[0]를 추출하고 join(',')으로 연결</hint>
    <solution><![CDATA[names = ["김철수", "이영희", "박민수"]
surnames = [names[0][0], names[1][0], names[2][0]]
print(",".join(surnames))]]></solution>
  </problem>

  <problem>
    <description>단어 "REVERSE"를 역순으로 뒤집고, 홀수 번째 위치(1,3,5번)의 글자만 소문자로 변환하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[eSrEvEr]]></output>
    <hint>[::-1]로 뒤집기 → 각 위치의 글자를 개별적으로 대소문자 변환</hint>
    <solution><![CDATA[word = "REVERSE"
reversed_word = word[::-1]  # "ESREVER"
result = reversed_word[0] + reversed_word[1].lower() + reversed_word[2] + reversed_word[3].lower() + reversed_word[4] + reversed_word[5].lower() + reversed_word[6]
print(result)]]></solution>
  </problem>

  <problem>
    <description>URL "https://www.example.com/page"에서 도메인 부분만 추출하여 대문자로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[WWW.EXAMPLE.COM]]></output>
    <hint>"//"로 분할하여 뒷부분 추출 → "/"로 다시 분할하여 도메인만 추출</hint>
    <solution><![CDATA[url = "https://www.example.com/page"
after_protocol = url.split("//")[1]  # "www.example.com/page"
domain = after_protocol.split("/")[0]  # "www.example.com"
print(domain.upper())]]></solution>
  </problem>

  <problem>
    <description>문자열 "abc-def-ghi"를 하이픈으로 분할하고, 가운데 부분을 대문자로 바꾼 후 다시 언더스코어로 연결하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[abc_DEF_ghi]]></output>
    <hint>split('-')로 분할 → 가운데 요소[1]에 upper() 적용 → join('_')으로 연결</hint>
    <solution><![CDATA[text = "abc-def-ghi"
parts = text.split('-')
parts[1] = parts[1].upper()  # 가운데 부분을 대문자로
print("_".join(parts))]]></solution>
  </problem>

  <problem>
    <description>비밀번호 "MyPass123!"에서 첫 2글자는 소문자로, 마지막 2글자는 대문자로 변환하고, 가운데 부분은 그대로 두어 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[myPass123!]]></output>
    <hint>[:2].lower() + [2:-2] + [-2:].upper() 조합</hint>
    <solution><![CDATA[password = "MyPass123!"
first_part = password[:2].lower()
middle_part = password[2:-2]
last_part = password[-2:].upper()
print(first_part + middle_part + last_part)]]></solution>
  </problem>

  <problem>
    <description>문자열 "apple|banana|cherry"를 파이프로 분할하고, 각 과일의 첫 글자와 마지막 글자만 조합하여 점으로 연결하고 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[ae.ba.cy]]></output>
    <hint>split('|') 후 각 과일의 [0] + [-1] 조합</hint>
    <solution><![CDATA[fruits = "apple|banana|cherry"
fruit_list = fruits.split('|')
codes = [fruit_list[0][0] + fruit_list[0][-1], 
         fruit_list[1][0] + fruit_list[1][-1], 
         fruit_list[2][0] + fruit_list[2][-1]]
print('.'.join(codes))]]></solution>
  </problem>

  <problem>
    <description>문자열 "  PYTHON PROGRAMMING  "의 공백을 제거하고 소문자로 변환한 후, 첫 6글자와 마지막 6글자를 언더스코어로 연결하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[python_mming]]></output>
    <hint>strip().lower() → [:6] + "_" + [-6:] 조합</hint>
    <solution><![CDATA[text = "  PYTHON PROGRAMMING  "
clean_text = text.strip().lower().replace(' ', '')
result = clean_text[:6] + "_" + clean_text[-6:]
print(result)]]></solution>
  </problem>

  <problem>
    <description>날짜 문자열 "2024-12-25"를 하이픈으로 분할하고, format() 메서드를 사용하여 "년도: {}, 월: {}, 일: {}" 형태로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[년도: 2024, 월: 12, 일: 25]]></output>
    <hint>split('-')로 분할한 후 format() 메서드로 포맷팅</hint>
    <solution><![CDATA[date = "2024-12-25"
parts = date.split('-')
print("년도: {}, 월: {}, 일: {}".format(parts[0], parts[1], parts[2]))]]></solution>
  </problem>
</problems>
<?xml version="1.0" encoding="UTF-8"?>
<problems>
  <problem>
    <description>매개변수와 반환값이 없는 간단한 함수를 정의하고 호출하세요. 함수명은 'say_hello'이고 "안녕하세요!"를 출력합니다.</description>
    <code></code>
    <input></input>
    <output><![CDATA[안녕하세요!]]></output>
    <hint>def 키워드를 사용해서 함수를 정의하고, print()를 사용해서 메시지를 출력하세요.</hint>
    <solution><![CDATA[# 간단한 함수 정의와 호출
def say_hello():
    print("안녕하세요!")

say_hello()]]></solution>
  </problem>
  
  <problem>
    <description>두 개의 숫자를 더해서 결과를 반환하는 함수를 작성하세요. 함수명은 'add_two'이고 5와 3을 더한 결과를 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[8]]></output>
    <hint>return 문을 사용해서 계산 결과를 반환하고, 함수 호출 결과를 print()로 출력하세요.</hint>
    <solution><![CDATA[# 계산 결과를 반환하는 함수
def add_two():
    return 5 + 3

result = add_two()
print(result)]]></solution>
  </problem>
  
  <problem>
    <description>현재 시간을 문자열로 반환하는 함수를 작성하세요. 함수명은 'get_current_time'이고 "현재 시간: 14:30"과 같은 형태로 반환합니다.</description>
    <code></code>
    <input></input>
    <output><![CDATA[현재 시간: 14:30]]></output>
    <hint>문자열을 return으로 반환하는 함수를 만들고, 호출 결과를 출력하세요.</hint>
    <solution><![CDATA[# 문자열을 반환하는 함수
def get_current_time():
    return "현재 시간: 14:30"

time_info = get_current_time()
print(time_info)]]></solution>
  </problem>
  
  <problem>
    <description>1부터 5까지의 합을 계산해서 반환하는 함수를 작성하세요. 함수명은 'sum_one_to_five'입니다.</description>
    <code></code>
    <input></input>
    <output><![CDATA[15]]></output>
    <hint>for문이나 직접 계산으로 1+2+3+4+5의 결과를 return하세요.</hint>
    <solution><![CDATA[# 1부터 5까지의 합을 반환하는 함수
def sum_one_to_five():
    total = 0
    for i in range(1, 6):
        total += i
    return total

result = sum_one_to_five()
print(result)]]></solution>
  </problem>
  
  <problem>
    <description>짝수인지 확인하는 함수를 작성하세요. 함수명은 'is_even_number'이고, 숫자 8이 짝수인지 확인한 결과를 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[True]]></output>
    <hint>8 % 2 == 0으로 짝수 여부를 확인하고 True/False를 반환하세요.</hint>
    <solution><![CDATA[# 짝수인지 확인하는 함수
def is_even_number():
    number = 8
    return number % 2 == 0

result = is_even_number()
print(result)]]></solution>
  </problem>
  
  <problem>
    <description>리스트 [1, 2, 3, 4, 5]의 길이를 반환하는 함수를 작성하세요. 함수명은 'get_list_length'입니다.</description>
    <code></code>
    <input></input>
    <output><![CDATA[5]]></output>
    <hint>len() 함수를 사용해서 리스트의 길이를 구하고 반환하세요.</hint>
    <solution><![CDATA[# 리스트 길이를 반환하는 함수
def get_list_length():
    my_list = [1, 2, 3, 4, 5]
    return len(my_list)

length = get_list_length()
print(length)]]></solution>
  </problem>
  
  <problem>
    <description>딕셔너리 {'name': '김철수', 'age': 25}에서 이름을 추출해서 반환하는 함수를 작성하세요. 함수명은 'get_person_name'입니다.</description>
    <code></code>
    <input></input>
    <output><![CDATA[김철수]]></output>
    <hint>딕셔너리의 'name' 키로 값을 가져와서 반환하세요.</hint>
    <solution><![CDATA[# 딕셔너리에서 이름을 반환하는 함수
def get_person_name():
    person = {'name': '김철수', 'age': 25}
    return person['name']

name = get_person_name()
print(name)]]></solution>
  </problem>
  
  <problem>
    <description>문자열 "Python Programming"을 대문자로 변환해서 반환하는 함수를 작성하세요. 함수명은 'convert_to_upper'입니다.</description>
    <code></code>
    <input></input>
    <output><![CDATA[PYTHON PROGRAMMING]]></output>
    <hint>.upper() 메서드를 사용해서 문자열을 대문자로 변환하세요.</hint>
    <solution><![CDATA[# 문자열을 대문자로 변환하는 함수
def convert_to_upper():
    text = "Python Programming"
    return text.upper()

result = convert_to_upper()
print(result)]]></solution>
  </problem>
  
  <problem>
    <description>두 함수를 작성하세요. 'create_list' 함수는 [10, 20, 30]을 반환하고, 'print_list' 함수는 리스트를 받아서 출력합니다. 두 함수를 연결해서 사용하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[[10, 20, 30]]]></output>
    <hint>첫 번째 함수의 반환값을 두 번째 함수의 인자로 전달하세요.</hint>
    <solution><![CDATA[# 두 함수를 연결해서 사용
def create_list():
    return [10, 20, 30]

def print_list():
    my_list = create_list()
    print(my_list)

print_list()]]></solution>
  </problem>
  
  <problem>
    <description>구구단 3단을 문자열로 만들어서 반환하는 함수를 작성하세요. 함수명은 'get_multiplication_table'이고, "3 x 1 = 3\n3 x 2 = 6\n..." 형태로 반환합니다.</description>
    <code></code>
    <input></input>
    <output><![CDATA[3 x 1 = 3
3 x 2 = 6
3 x 3 = 9]]></output>
    <hint>for문을 사용해서 문자열을 만들고, \n으로 줄바꿈을 추가하세요.</hint>
    <solution><![CDATA[# 구구단 3단을 반환하는 함수
def get_multiplication_table():
    result = ""
    for i in range(1, 4):  # 1, 2, 3만 출력
        result += f"3 x {i} = {3 * i}\n"
    return result.strip()  # 마지막 줄바꿈 제거

table = get_multiplication_table()
print(table)]]></solution>
  </problem>
</problems>
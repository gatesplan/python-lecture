<?xml version="1.0" encoding="UTF-8"?>
<!--
  리스트 선언과 출력 기초 문제
  - 직접 리스트 선언 (숫자, 문자열, 혼합)
  - 빈 리스트 선언
  - print() 기본 출력 및 f-string, sep 파라미터 복습
-->
<problems>
  <problem>
    <description>빈 리스트를 만들고 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[[]]]></output>
    <hint>대괄호 []를 사용하여 빈 리스트를 만들 수 있습니다.</hint>
    <solution><![CDATA[empty_list = []
print(empty_list)]]></solution>
  </problem>

  <problem>
    <description>숫자 1, 2, 3을 포함하는 리스트를 만들고 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[[1, 2, 3]]]></output>
    <hint>대괄호 안에 콤마로 구분하여 숫자를 넣으세요.</hint>
    <solution><![CDATA[numbers = [1, 2, 3]
print(numbers)]]></solution>
  </problem>

  <problem>
    <description>문자열 "사과", "바나나", "오렌지"를 포함하는 리스트를 만들고 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[['사과', '바나나', '오렌지']]]></output>
    <hint>대괄호 안에 따옴표로 감싼 문자열을 콤마로 구분하여 넣으세요.</hint>
    <solution><![CDATA[fruits = ["사과", "바나나", "오렌지"]
print(fruits)]]></solution>
  </problem>

  <problem>
    <description>숫자 1, 문자열 "hello", 숫자 3.14를 포함하는 혼합 리스트를 만들고 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[[1, 'hello', 3.14]]]></output>
    <hint>리스트는 서로 다른 타입의 값들을 함께 저장할 수 있습니다.</hint>
    <solution><![CDATA[mixed_list = [1, "hello", 3.14]
print(mixed_list)]]></solution>
  </problem>

  <problem>
    <description>색깔 "빨강", "파랑", "노랑"을 담은 리스트를 만들고 f-string을 사용하여 "색깔들: [리스트]" 형태로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[색깔들: ['빨강', '파랑', '노랑']]]></output>
    <hint>f"색깔들: {변수명}" 형태로 f-string을 사용하세요.</hint>
    <solution><![CDATA[colors = ["빨강", "파랑", "노랑"]
print(f"색깔들: {colors}")]]></solution>
  </problem>

  <problem>
    <description>점수 95, 87, 92를 담은 리스트를 만들고 "점수:", 리스트를 sep=" "로 구분하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[점수: [95, 87, 92]]]></output>
    <hint>print("점수:", 변수명, sep=" ")를 사용하세요.</hint>
    <solution><![CDATA[scores = [95, 87, 92]
print("점수:", scores, sep=" ")]]></solution>
  </problem>

  <problem>
    <description>동물 이름 "고양이", "강아지", "토끼"를 담은 리스트를 만들고 첫 번째 동물만 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[고양이]]></output>
    <hint>리스트[0]을 사용하여 첫 번째 요소에 접근할 수 있습니다.</hint>
    <solution><![CDATA[animals = ["고양이", "강아지", "토끼"]
print(animals[0])]]></solution>
  </problem>

  <problem>
    <description>요일 "월", "화", "수", "목", "금"을 담은 리스트를 만들고 마지막 요일을 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[금]]></output>
    <hint>리스트[-1]을 사용하여 마지막 요소에 접근할 수 있습니다.</hint>
    <solution><![CDATA[weekdays = ["월", "화", "수", "목", "금"]
print(weekdays[-1])]]></solution>
  </problem>

  <problem>
    <description>숫자 10, 20, 30, 40, 50을 담은 리스트를 만들고 두 번째와 네 번째 숫자를 각각 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[20
40]]></output>
    <hint>리스트[1]과 리스트[3]을 사용하세요. 인덱스는 0부터 시작합니다.</hint>
    <solution><![CDATA[numbers = [10, 20, 30, 40, 50]
print(numbers[1])
print(numbers[3])]]></solution>
  </problem>

  <problem>
    <description>과목 "수학", "국어", "영어"를 담은 리스트를 만들고 format() 메서드를 사용하여 "과목 리스트: [리스트]" 형태로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[과목 리스트: ['수학', '국어', '영어']]]></output>
    <hint>"과목 리스트: {}".format(변수명)을 사용하세요.</hint>
    <solution><![CDATA[subjects = ["수학", "국어", "영어"]
print("과목 리스트: {}".format(subjects))]]></solution>
  </problem>

  <problem>
    <description>학생 이름 "김철수", "이영희", "박민수"를 담은 리스트를 만들고 end=" "를 사용하여 첫 번째와 두 번째 이름을 한 줄에 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[김철수 이영희]]></output>
    <hint>print(리스트[0], end=" ")과 print(리스트[1])를 사용하세요.</hint>
    <solution><![CDATA[students = ["김철수", "이영희", "박민수"]
print(students[0], end=" ")
print(students[1])]]></solution>
  </problem>

  <problem>
    <description>온도 25, 30, 28을 담은 리스트를 만들고 "오늘 온도: 첫번째°C, 내일 온도: 두번째°C" 형태로 f-string을 사용하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[오늘 온도: 25°C, 내일 온도: 30°C]]></output>
    <hint>f"오늘 온도: {리스트[0]}°C, 내일 온도: {리스트[1]}°C"를 사용하세요.</hint>
    <solution><![CDATA[temperatures = [25, 30, 28]
print(f"오늘 온도: {temperatures[0]}°C, 내일 온도: {temperatures[1]}°C")]]></solution>
  </problem>

  <problem>
    <description>음식 "피자", "햄버거", "치킨", "파스타"를 담은 리스트를 만들고 처음 두 개 음식을 print()의 콤마를 사용해 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[피자 햄버거]]></output>
    <hint>print(리스트[0], 리스트[1])를 사용하세요.</hint>
    <solution><![CDATA[foods = ["피자", "햄버거", "치킨", "파스타"]
print(foods[0], foods[1])]]></solution>
  </problem>

  <problem>
    <description>년도 2020, 2021, 2022, 2023을 담은 리스트를 만들고 sep="-"를 사용하여 모든 년도를 하이픈으로 연결하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[2020-2021-2022-2023]]></output>
    <hint>print(리스트[0], 리스트[1], 리스트[2], 리스트[3], sep="-")를 사용하세요.</hint>
    <solution><![CDATA[years = [2020, 2021, 2022, 2023]
print(years[0], years[1], years[2], years[3], sep="-")]]></solution>
  </problem>

  <problem>
    <description>도시 "서울", "부산", "대구"를 담은 리스트를 만들고 f-string을 사용하여 "여행지: 첫번째 → 두번째 → 세번째" 형태로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[여행지: 서울 → 부산 → 대구]]></output>
    <hint>f"여행지: {리스트[0]} → {리스트[1]} → {리스트[2]}"를 사용하세요.</hint>
    <solution><![CDATA[cities = ["서울", "부산", "대구"]
print(f"여행지: {cities[0]} → {cities[1]} → {cities[2]}")]]></solution>
  </problem>

  <problem>
    <description>가격 1000, 2000, 1500을 담은 리스트를 만들고 두 번째 가격에 100을 더한 값을 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[2100]]></output>
    <hint>리스트[1] + 100을 계산하여 출력하세요.</hint>
    <solution><![CDATA[prices = [1000, 2000, 1500]
print(prices[1] + 100)]]></solution>
  </problem>

  <problem>
    <description>이름 "김철수", "이영희"를 담은 리스트를 만들고 format() 메서드로 "첫 번째 학생: {}, 두 번째 학생: {}" 형태로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[첫 번째 학생: 김철수, 두 번째 학생: 이영희]]></output>
    <hint>"첫 번째 학생: {}, 두 번째 학생: {}".format(리스트[0], 리스트[1])을 사용하세요.</hint>
    <solution><![CDATA[names = ["김철수", "이영희"]
print("첫 번째 학생: {}, 두 번째 학생: {}".format(names[0], names[1]))]]></solution>
  </problem>

  <problem>
    <description>월 1, 2, 3, 4, 5, 6을 담은 리스트를 만들고 첫 번째, 세 번째, 다섯 번째 월을 콤마와 공백으로 구분하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[1, 3, 5]]></output>
    <hint>print(리스트[0], 리스트[2], 리스트[4], sep=", ")를 사용하세요.</hint>
    <solution><![CDATA[months = [1, 2, 3, 4, 5, 6]
print(months[0], months[2], months[4], sep=", ")]]></solution>
  </problem>

  <problem>
    <description>단어 "apple", "banana", "cherry"를 담은 리스트를 만들고 각 단어의 첫 글자만 대문자로 하여 f-string으로 "과일: A, B, C" 형태로 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[과일: A, B, C]]></output>
    <hint>문자열[0].upper()를 사용하여 첫 글자를 대문자로 만들 수 있습니다.</hint>
    <solution><![CDATA[words = ["apple", "banana", "cherry"]
print(f"과일: {words[0][0].upper()}, {words[1][0].upper()}, {words[2][0].upper()}")]]></solution>
  </problem>

  <problem>
    <description>숫자 7, 14, 21, 28을 담은 리스트를 만들고 "7의 배수들:"이라는 문자열과 함께 sep="|"를 사용하여 파이프로 구분하여 출력하세요.</description>
    <code></code>
    <input></input>
    <output><![CDATA[7의 배수들:|7|14|21|28]]></output>
    <hint>print("7의 배수들:", 리스트[0], 리스트[1], 리스트[2], 리스트[3], sep="|")를 사용하세요.</hint>
    <solution><![CDATA[multiples = [7, 14, 21, 28]
print("7의 배수들:", multiples[0], multiples[1], multiples[2], multiples[3], sep="|")]]></solution>
  </problem>
</problems>